//
//  ListRouter.swift
//  CleanSwift_GetData
//
//  Created by brian은석 on 2021/02/02.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

//역할: Present 
import UIKit

protocol ListRoutingLogic {
    func routeTo(destination: ListRouter.RouterDestination,selectedRow:Int)
}

protocol ListDataPassing {
    var dataStore: ListDataStore? { get }
}

class ListRouter: ListRoutingLogic, ListDataPassing {
    weak var viewController: ListViewController?
    var dataStore: ListDataStore?
    // MARK: Routing
    
    //6번
    func routeTo(destination: ListRouter.RouterDestination,selectedRow:Int) {
        switch destination {
        case .Get:
            let destinationVC = viewController?.storyboard?.instantiateViewController(withIdentifier: "DetailViewController") as! DetailViewController
            destinationVC.navigationItem.title = "Detail"
            var destinationDS = destinationVC.router!.dataStore!
            passDataToShowDetail(source: dataStore!, destination: &destinationDS, selectedRow: selectedRow)
            navigateToShowDetail(source: viewController!, destination: destinationVC)
        case .Post:
            print("show")
        }
    }
    // MARK: Navigation
    
    //8번 넘어간다~
    func navigateToShowDetail(source: ListViewController,
                              destination: DetailViewController) {
        source.show(destination, sender: nil)
    }
    
    // MARK: Passing data
    func passDataToShowDetail(source: ListDataStore,
                              destination: inout DetailDataStore,selectedRow:Int) {
        //7번 다음컨트롤러에 데이터 넣어줌
        destination.info = source.informaions?[selectedRow]
    }
    
    // MARK: - RouterEnum
    enum RouterDestination {
        case Get
        case Post
        //        case List
    }
}
